K3S installation on CoreOS
https://kube-vip.io/usage/k3s/

# mkdir -p /var/lib/rancher/k3s/server/manifests/
# curl https://kube-vip.io/manifests/rbac.yaml > /var/lib/rancher/k3s/server/manifests/rbac.yaml

# export VIP=x.x.x.x
# export INTERFACE=ethx
# curl -sL kube-vip.io/k3s | vipAddress=$VIP vipInterface=$INTERFACE sh | sudo tee /var/lib/rancher/k3s/server/manifests/vip.yaml
# rpm-ostree install container-selinux selinux-policy-base --allow-inactive

# curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--write-kubeconfig-mode 644 \
-t agent-secret --tls-san $VIP" sh -
---------------
Kube-vip Cloud Provider installation
https://kube-vip.io/usage/on-prem/

# kubectl apply -f https://raw.githubusercontent.com/kube-vip/kube-vip-cloud-provider/main/manifest/kube-vip-cloud-controller.yaml
# kubectl delete configmap --namespace kube-system kubevip
# kubectl create configmap --namespace kube-system kubevip --from-literal cidr-global=X.X.X.X/X
or
# kubectl create configmap --namespace kube-system kubevip --from-literal range-global=X.X.X.X-X.X.X.X

-------------------------------------------------------


# vi ~/config.k3s.yaml and replace server with VIP address
# chmod o-r ~/config.k3s.yaml
# chmod g-r ~/config.k3s.yaml
# chmod 600 ~/config.k3s.yaml
Add remaining server nodes:
# k3sup join --host=kube-node2 --server-user=root --server-host=<VIP-address> --user=root --server --k3s-extra-args="--disable servicelb"
# k3sup join --host=kube-node3 --server-user=root --server-host=<VIP-address> --user=root --server --k3s-extra-args="--disable servicelb"

# kubectl get po -n kube-system

Add worker node:
# k3sup join --host=kube-node4 --server-user=root --server-host=<VIP-address> --user=root
# k3sup join --host=kube-node5 --server-user=root --server-host=<VIP-address> --user=root
# k3sup join --host=kube-node6 --server-user=root --server-host=<VIP-address> --user=root

# kubectl get pods -n kube-system
# kubectl get service -n kube-system
-------------------------------


Check status:
# kubectl get all --all-namespaces
# kubectl get node -o wide
# kubectl get all
# k3s kubectl get pods --all-namespaces
# kubectl -n kube-system edit configmap traefik
# kubectl get endpoints -n kube-system

Show leader:
# kubectl get endpoints kube-controller-manager --namespace=kube-system -o yaml


-------------------------------
Uninstall K3S

Server:
# /usr/local/bin/k3s-uninstall.sh

Agent:
# /usr/local/bin/k3s-agent-uninstall.sh
----------------------------------
Enable Traefik Dashboard 

# vi /var/lib/rancher/k3s/server/manifests/traefik-config.yaml

apiVersion: helm.cattle.io/v1
kind: HelmChartConfig
metadata:
  name: traefik
  namespace: kube-system
spec:
  valuesContent: |-
    dashboard:
      enabled: true
      domain: "traefik.internal"
 
-------------------
/// OLD///
K3SUP installation
# curl -sLS https://get.k3sup.dev | sh

# vi ~/.ssh/authorized_keys
Comment this line, if exists:
no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command="echo 'Please login as the user \"ubuntu\" rather than the user \"root\".';echo;sleep 10"

Add private ssh key to ~/.ssh/id_rsa
# vi ~/.ssh/id_rsa

# k3sup install \
	--host=kube-node1 \
	--user=root \
	--local-path=config.k3s.yaml \
	--context k3s-ha \
	--cluster \
	--tls-san <VIP-address> \
	--k3s-extra-args="--disable servicelb --resolv-conf"
	
// if traeafik not needed: --disable servicelb,traefik 
// custom config name: --local-path=config.k3s.yaml
// if need taint master nodes: --node-taint node-role.kubernetes.io/master=true:NoSchedule

# Test your cluster with:
export KUBECONFIG=/root/config.k3s.yaml
kubectl config set-context k3s-ha;
kubectl get node -o wide

Kube-VIP install (https://gitlab.com/monachus/channel/-/blob/master/resources/2021.02-ha-k3s-kube-vip-metallb/README.md):
# curl -s https://kube-vip.io/manifests/rbac.yaml > /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
# export VIP=<VIP-address>
# export INTERFACE=ens3

fetch container:
# ctr image pull docker.io/plndr/kube-vip:v0.3.5

create alias:
# alias kube-vip="ctr run --rm --net-host docker.io/plndr/kube-vip:v0.3.5 vip /kube-vip"


generate manifest

/// need to test kubevip services loadbalncer
# kube-vip manifest daemonset \
    --arp \
    --interface $INTERFACE \
    --address $VIP \
    --controlplane \
    --services \
    --cidr <X.X.X.X/XX> \
    --leaderElection \
    --taint \
    --inCluster | tee /var/lib/rancher/k3s/server/manifests/kube-vip.yaml


# kube-vip manifest daemonset \
    --arp \
    --interface $INTERFACE \
    --address $VIP \
    --controlplane \
    --leaderElection \
    --taint \
    --inCluster | tee /var/lib/rancher/k3s/server/manifests/kube-vip.yaml
///OLD///
