Deploy Kibana

Create Kibana saved objects encrypted key:
# kubectl create secret generic kibana-saved-objects-encrypted-key --from-literal=xpack.encryptedSavedObjects.encryptionKey="$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)"

Get Kibana encrypted key:
# kubectl get secret kibana-saved-objects-encrypted-key -o yaml
# echo -n "<secret-value>" | base64 --decode
# kubectl delete secret kibana-saved-objects-encrypted-key


# vi kibana.yaml

apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
spec:
  version: 7.13.2
  count: 1
  elasticsearchRef:
    name: "elasticsearch"
  secureSettings:
  - secretName: kibana-saved-objects-encrypted-key
  http:
    service:
      spec:
        type: LoadBalancer
        ports:
        - name: https
          protocol: TCP
          port: 443
          targetPort: 5601
    #tls:
      #selfSignedCertificate:
        #subjectAltNames:
        #- ip: 192.168.0.1
        #- dns: example.com
  # this shows how to customize the Kibana pod
  # with labels and resource limits
  podTemplate:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        resources:
          limits:
            memory: 1Gi
            cpu: 1

# kubectl apply -f kibana.yaml

Get external IP:
# kubectl get service kibana-kb-http
