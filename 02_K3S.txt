K3S installation
------------
Prepare OS
# vi /etc/hostname
# vi /etc/hosts
# vi /etc/chrony.conf
pool <ntp-server-address> iburst prefer
# systemctl restart chronyd

# vi ~/.ssh/authorized_keys
Remove this line, if exists:
no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command="echo 'Please login as the user \"ubuntu\" rather than the user \"root\".';echo;sleep 10"
----------------------------
On first master node:
# curl -sLS https://get.k3sup.dev | sh

Add private ssh key to ~/.ssh/id_rsa
# vi ~/.ssh/id_rsa

# k3sup install \
	--host=kube-node1 \
	--user=root \
	--cluster \
	--tls-san <VIP-address> \
	--k3s-extra-args="--disable servicelb"
-------------------
Kube-vip installation
# export VIP=x.x.x.x
# export INTERFACE=ethx

# curl -s https://kube-vip.io/manifests/rbac.yaml > /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
# curl -sL kube-vip.io/k3s | vipAddress=$VIP vipInterface=$INTERFACE sh | sudo tee /var/lib/rancher/k3s/server/manifests/kube-vip.yaml
# vi /etc/rancher/k3s/k3s.yaml
- cluster:
     server: <VIP-address>
-------------------------
Add master nodes:
# k3sup join --host=<node-name> --server-user=root --server-host=<VIP-address> --user=root --server --k3s-extra-args="--disable servicelb"

Add worker nodes:
# k3sup join --host=<node-name> --server-user=root --server-host=<VIP-address> --user=root

-------------------------------
Kube-vip Cloud Provider installation
https://kube-vip.io/usage/on-prem/

# kubectl apply -f https://raw.githubusercontent.com/kube-vip/kube-vip-cloud-provider/main/manifest/kube-vip-cloud-controller.yaml
# kubectl delete configmap --namespace kube-system kubevip

# kubectl create configmap --namespace kube-system kubevip --from-literal cidr-global=X.X.X.X/X
or
# kubectl create configmap --namespace kube-system kubevip --from-literal range-global=X.X.X.X-X.X.X.X

-------------------------------

Check status:
# kubectl get all --all-namespaces
# kubectl get nodes -o wide
# kubectl get endpoints -n kube-system
# kubectl get service -n kube-system
# kubectl get endpoints kube-controller-manager --namespace=kube-system -o yaml

-------------------------------
Uninstall K3S

Server:
# /usr/local/bin/k3s-uninstall.sh

Agent:
# /usr/local/bin/k3s-agent-uninstall.sh

---------------
